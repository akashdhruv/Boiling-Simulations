#!/bin/bash

JobWorkDir="/data/homezvol1/fandi/20221026/Boiling-Simulations/simulation/PoolBoiling/example2D"

cd /data/homezvol1/fandi/20221026/Boiling-Simulations

# Bash file to load modules and set
# environment variables for compilers
# and external libraries

# MPI module. This should be available
# as standard module on a cluster. If not,
# build your own MPI and set
# PATH, LD_LIBRARY_PATH

# Flash-X requires that an environment variable
# MPI_HOME is available that points to the
# path to MPI installation
module load openmpi/4.1.2/gcc.8.4.0

# Export project home
export PROJECT_HOME=$(realpath .)

# Path to parallel HDF5 installtion with fortran support
export HDF5_HOME="$(realpath software/HDF5)/install"

# Store path to amrex as environment variable
export AMREX2D_HOME="$(realpath software/AMReX)/install/2D"
export AMREX3D_HOME="$(realpath software/AMReX)/install/3D"

# Path to Flash-X
export FLASH_HOME=$(realpath software/Flash-X)

# Path to Flash-X site/makefile
FlashSite=$(realpath sites/hello)

cd /data/homezvol1/fandi/20221026/Boiling-Simulations/simulation/PoolBoiling

# cache the value of current working directory

FlashOptions="incompFlow/PoolBoiling -auto -maxblocks=100 +amrex +parallelIO \
	-site=$FlashSite SimForceInOut=True IOWriteGridFiles=True"

cd /data/homezvol1/fandi/20221026/Boiling-Simulations/simulation/PoolBoiling/example2D

# cache the value of current working directory

FlashOptions="$FlashOptions -2d -nxb=16 -nyb=16"

cd /data/homezvol1/fandi/20221026/Boiling-Simulations/simulation/PoolBoiling/example2D

# cache the value of current working directory
NodeDir=$(realpath .)

# run Flash-X setup
cd $FLASH_HOME && ./setup $FlashOptions

# compile the simulation and copy files
cd $FLASH_HOME/object && make -j && cp flashx Makefile.h setup_call $NodeDir/

# copy AMReX configuration
cd $AMREX2D_HOME/lib/pkgconfig && cp amrex.pc $NodeDir/

# chdir into node directory and do clean up
cd $NodeDir && rm -rf $FLASH_HOME/object
